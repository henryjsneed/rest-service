#spring.cloud.config.server.git.uri: ${HOME}/Documents/configrepo-api
#spring.application.name: SpringCloudApplication
#management.endpoints.web.exposure.include: "*"
server.port: 6060
#spring.datasource.url=jdbc:h2:file:C:/Users/hsneed/OneDrive - VFC Corp/Documents/data/demo
spring.datasource.url=jdbc:h2:mem:test
spring.jpa.hibernate.ddl-auto=create
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML

# Spring Cloud Stream
#spring.cloud.stream.default-binder=rabbit
#spring.cloud.stream.bindings.input.destination=users
#spring.cloud.stream.bindings.input.group=usersGroup


#spring.cloud.function.definition=CustomerServiceConsumer;uppercase;savedMessage


######spring.cloud.function.definition=uppercase;savedMessage

#spring.cloud.stream.bindings.customerConsumer-in-0.destination=customerInput
#spring.application.name=rest-service
#spring.cloud.stream.bindings.CustomerServiceSupplier-out-0.destination=CustomerEvents
#spring.cloud.stream.bindings.callmeEventConsumer-in-0.destination=callme-events
#spring.cloud.stream.bindings.callmeEventConsumer-in-0.group=a
#spring.cloud.stream.source=CustomerServiceSupplier
#logging.level.org.springframework.amqp=DEBUG
##CustomerServiceSupplier.supplier.enabled=true
##spring.cloud.stream.bindings.process-in-0.group=${spring.application.name}
#    # Use the consumer function name as input to create destination and group
#spring.cloud.stream.bindings.input.content-type=application/json


#-------------------------------------------------------------------------------
#spring.cloud.stream.bindings.userConsumer-in-0.destination=users
#spring.cloud.stream.bindings.userConsumer-in-0.group=usersGroup
    # Consumer input binding parameters
#spring.cloud.stream.bindings.userConsumer-in-0.consumer.max-attempts=3
#spring.cloud.stream.bindings.userConsumer-in-0.consumer.back-off-initial-interval= 500
#spring.cloud.stream.bindings.userConsumer-in-0.consumer.back-off-max-interval=1000
#spring.cloud.stream.bindings.userConsumer-in-0.consumer.back-off-multiplier=2.0
   # RabbitMQ consumer input binding parameters
#spring.cloud.stream.rabbit.bindings.userConsumer-in-0.consumer.auto-bind-dlq=true
#spring.cloud.stream.rabbit.bindings.userConsumer-in-0.consumer.republish-to-dlq=true
#-------------------------------------------------------------------------------
#spring.application.name=producer-service
#spring.cloud.stream.bindings.CustomerServiceSupplier-out-0.destination=supplier
#	spring.cloud.stream.source=CustomerServiceSupplier
#	logging.level.org.springframework.amqp=DEBUG
#	spring.cloud.stream.bindings.CustomerServiceSupplier-in-0.destination=supplier
#	spring.cloud.stream.bindings.CustomerServiceSupplier-in-0.group=a
# RabbitMQ
spring.rabbitmq.host=127.0.0.1
# the following does not set the rabbitmq port but rather tells the program where it is running
spring.rabbitmq.port=5672
# same with this, it's not setting the username and password, it's telling your program how to log in
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

customer.rabbitmq.directexchange=EXCHANGE1
customer.rabbitmq.requestqueue=QUEUE1
customer.rabbitmq.routingkey=ROUTING_KEY1